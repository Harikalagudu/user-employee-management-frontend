{"ast":null,"code":"// src/services/api.js\n\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers['Authorization'] = 'Bearer ' + user.token;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// --- AUTH SERVICE ---\nexport const login = (username, password, role) => {\n  return api.post('/auth/login', {\n    username,\n    password,\n    role\n  });\n};\nexport const resetPassword = newPassword => {\n  return api.post('/auth/reset-password', {\n    newPassword\n  });\n};\n\n// --- ADMIN SERVICE ---\nexport const getAdminDashboardStats = () => {\n  return api.get('/admin/dashboard/stats');\n};\nexport const getManageableUsers = params => {\n  return api.get('/admin/users', {\n    params\n  });\n};\nexport const updateUserStatus = (userId, isEnabled) => {\n  return api.put(`/admin/users/${userId}/status`, {\n    enabled: isEnabled\n  });\n};\nexport const createUser = userData => {\n  return api.post('/admin/users', userData);\n};\n\n// ✅ Export Users (returns blob)\nexport const exportUsersAsCSV = () => {\n  return api.get('/admin/users/export', {\n    responseType: 'blob'\n  });\n};\n\n// --- HR / MANAGER SERVICE ---\nexport const getDashboardStats = () => api.get('/dashboard/stats');\nexport const getEmployees = params => api.get('/dashboard/employees', {\n  params\n});\nexport const onboardEmployee = data => api.post('/dashboard/employees', data);\nexport const updateEmployee = (id, data) => api.put(`/dashboard/employees/${id}`, data);\nexport const deleteEmployee = id => api.delete(`/dashboard/employees/${id}`);\n\n// --- LEAVE MANAGEMENT SERVICE ---\nexport const getMyLeaveBalances = () => api.get('/leave/my-balances');\nexport const getMyLeaveRequests = () => api.get('/leave/my-requests');\nexport const submitLeaveRequest = data => api.post('/leave/requests', data);\nexport const getPendingLeaveRequests = () => api.get('/leave/requests/pending');\nexport const updateLeaveRequestStatus = (id, status) => api.put(`/leave/requests/${id}/status`, {\n  status\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","error","Promise","reject","login","username","password","role","post","resetPassword","newPassword","getAdminDashboardStats","get","getManageableUsers","params","updateUserStatus","userId","isEnabled","put","enabled","createUser","userData","exportUsersAsCSV","responseType","getDashboardStats","getEmployees","onboardEmployee","data","updateEmployee","id","deleteEmployee","delete","getMyLeaveBalances","getMyLeaveRequests","submitLeaveRequest","getPendingLeaveRequests","updateLeaveRequestStatus","status"],"sources":["C:/Users/HARIKA/Downloads/User-Employee-Management-main/User-Employee-Management-main/user-employee-management-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\n\nimport axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8080/api',\n    headers: { 'Content-Type': 'application/json' },\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            config.headers['Authorization'] = 'Bearer ' + user.token;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// --- AUTH SERVICE ---\nexport const login = (username, password, role) => {\n    return api.post('/auth/login', { username, password, role });\n};\n\nexport const resetPassword = (newPassword) => {\n    return api.post('/auth/reset-password', { newPassword });\n};\n\n// --- ADMIN SERVICE ---\nexport const getAdminDashboardStats = () => {\n    return api.get('/admin/dashboard/stats');\n};\n\nexport const getManageableUsers = (params) => {\n    return api.get('/admin/users', { params });\n};\n\nexport const updateUserStatus = (userId, isEnabled) => {\n    return api.put(`/admin/users/${userId}/status`, { enabled: isEnabled });\n};\n\nexport const createUser = (userData) => {\n    return api.post('/admin/users', userData);\n};\n\n// ✅ Export Users (returns blob)\nexport const exportUsersAsCSV = () => {\n    return api.get('/admin/users/export', { responseType: 'blob' });\n};\n\n// --- HR / MANAGER SERVICE ---\nexport const getDashboardStats = () => api.get('/dashboard/stats');\nexport const getEmployees = (params) => api.get('/dashboard/employees', { params });\nexport const onboardEmployee = (data) => api.post('/dashboard/employees', data);\nexport const updateEmployee = (id, data) => api.put(`/dashboard/employees/${id}`, data);\nexport const deleteEmployee = (id) => api.delete(`/dashboard/employees/${id}`);\n\n// --- LEAVE MANAGEMENT SERVICE ---\nexport const getMyLeaveBalances = () => api.get('/leave/my-balances');\nexport const getMyLeaveRequests = () => api.get('/leave/my-requests');\nexport const submitLeaveRequest = (data) => api.post('/leave/requests', data);\nexport const getPendingLeaveRequests = () => api.get('/leave/requests/pending');\nexport const updateLeaveRequestStatus = (id, status) => api.put(`/leave/requests/${id}/status`, { status });\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}