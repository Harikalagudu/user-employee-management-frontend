{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARIKA\\\\Downloads\\\\User-Employee-Management-main\\\\User-Employee-Management-main\\\\user-employee-management-frontend\\\\src\\\\components\\\\Modal.js\";\nimport React from 'react';\n\n/**\r\n * A reusable modal component.\r\n * @param {boolean} isOpen - Whether the modal is open.\r\n * @param {function} onClose - Function to close the modal.\r\n * @param {React.ReactNode} children - The content to display inside the modal.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white w-full max-w-md mx-4 md:mx-0 rounded-xl shadow-lg p-6 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"absolute top-2 right-2 text-gray-500 hover:text-gray-800 text-xl\",\n        \"aria-label\": \"Close Modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","isOpen","onClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARIKA/Downloads/User-Employee-Management-main/User-Employee-Management-main/user-employee-management-frontend/src/components/Modal.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * A reusable modal component.\r\n * @param {boolean} isOpen - Whether the modal is open.\r\n * @param {function} onClose - Function to close the modal.\r\n * @param {React.ReactNode} children - The content to display inside the modal.\r\n */\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white w-full max-w-md mx-4 md:mx-0 rounded-xl shadow-lg p-6 relative\">\r\n                {/* Close Button */}\r\n                <button\r\n                    onClick={onClose}\r\n                    className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-800 text-xl\"\r\n                    aria-label=\"Close Modal\"\r\n                >\r\n                    &times;\r\n                </button>\r\n\r\n                {/* Modal Content */}\r\n                <div>{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAC7C,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI;EAExB,oBACIF,OAAA;IAAKK,SAAS,EAAC,4EAA4E;IAAAD,QAAA,eACvFJ,OAAA;MAAKK,SAAS,EAAC,yEAAyE;MAAAD,QAAA,gBAEpFJ,OAAA;QACIM,OAAO,EAAEH,OAAQ;QACjBE,SAAS,EAAC,kEAAkE;QAC5E,cAAW,aAAa;QAAAD,QAAA,EAC3B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGTV,OAAA;QAAAI,QAAA,EAAMA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GApBIV,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}