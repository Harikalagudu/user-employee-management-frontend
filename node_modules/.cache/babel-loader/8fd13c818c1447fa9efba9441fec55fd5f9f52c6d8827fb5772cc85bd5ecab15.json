{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARIKA\\\\Downloads\\\\User-Employee-Management-main\\\\User-Employee-Management-main\\\\user-employee-management-frontend\\\\src\\\\components\\\\RoleSelector\\\\RoleSelector.js\";\n// src/components/RoleSelector/RoleSelector.js\nimport React from 'react';\nimport './RoleSelector.css'; // Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleSelector = ({\n  selectedRole,\n  onSelectRole\n}) => {\n  // These values MUST match the backend Enum Role values (e.g., \"ADMIN\", \"HR\")\n  // The labels are for display in the UI.\n  const roles = [{\n    value: 'ADMIN',\n    label: 'Admin'\n  }, {\n    value: 'HR',\n    label: 'HR'\n  }, {\n    value: 'MANAGER',\n    label: 'Manager'\n  }, {\n    value: 'EMPLOYEE',\n    label: 'Employee'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-selector-container\",\n    children: roles.map(role => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `role-button ${selectedRole === role.value ? 'selected' : ''}`,\n      onClick: () => onSelectRole(role.value),\n      children: role.label\n    }, role.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = RoleSelector;\nexport default RoleSelector;\nvar _c;\n$RefreshReg$(_c, \"RoleSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoleSelector","selectedRole","onSelectRole","roles","value","label","className","children","map","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARIKA/Downloads/User-Employee-Management-main/User-Employee-Management-main/user-employee-management-frontend/src/components/RoleSelector/RoleSelector.js"],"sourcesContent":["// src/components/RoleSelector/RoleSelector.js\r\nimport React from 'react';\r\nimport './RoleSelector.css'; // Make sure this path is correct\r\n\r\nconst RoleSelector = ({ selectedRole, onSelectRole }) => {\r\n    // These values MUST match the backend Enum Role values (e.g., \"ADMIN\", \"HR\")\r\n    // The labels are for display in the UI.\r\n    const roles = [\r\n        { value: 'ADMIN', label: 'Admin' },\r\n        { value: 'HR', label: 'HR' },\r\n        { value: 'MANAGER', label: 'Manager' },\r\n        { value: 'EMPLOYEE', label: 'Employee' }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"role-selector-container\">\r\n            {roles.map((role) => (\r\n                <button\r\n                    key={role.value}\r\n                    className={`role-button ${selectedRole === role.value ? 'selected' : ''}`}\r\n                    onClick={() => onSelectRole(role.value)}\r\n                >\r\n                    {role.label}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoleSelector;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EACrD;EACA;EACA,MAAMC,KAAK,GAAG,CACV;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC5B;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EACtC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,CAC3C;EAED,oBACIN,OAAA;IAAKO,SAAS,EAAC,yBAAyB;IAAAC,QAAA,EACnCJ,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACZV,OAAA;MAEIO,SAAS,EAAE,eAAeL,YAAY,KAAKQ,IAAI,CAACL,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;MAC1EM,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAACO,IAAI,CAACL,KAAK,CAAE;MAAAG,QAAA,EAEvCE,IAAI,CAACJ;IAAK,GAJNI,IAAI,CAACL,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAvBIf,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}